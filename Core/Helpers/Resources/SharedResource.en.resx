<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ACCOUNT_CONFIRMATION" xml:space="preserve">
    <value>Account verification</value>
  </data>
  <data name="CONFIRM_PASSWORD" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="COUNTRY_CODE" xml:space="preserve">
    <value>Country code</value>
  </data>
  <data name="DATA_NOT_FOUND" xml:space="preserve">
    <value>Data not found</value>
  </data>
  <data name="EMAIL" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Email_ALREADY_EXIST" xml:space="preserve">
    <value>Email is already exist</value>
  </data>
  <data name="FIRST_NAME" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="INVALID_API_KEY" xml:space="preserve">
    <value>Invalid api key</value>
  </data>
  <data name="INVALID_MOBILE_NUMBER" xml:space="preserve">
    <value>Invalid mobile number</value>
  </data>
  <data name="INVALID_RATE_VALUE" xml:space="preserve">
    <value>Rate value must be between {0} and {1}</value>
  </data>
  <data name="LAST_NAME" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="MISSING_API_KEY" xml:space="preserve">
    <value>Missing api key</value>
  </data>
  <data name="NAME" xml:space="preserve">
    <value>Name foo</value>
  </data>
  <data name="PASSWORD" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PASSWORD_NOT_MATCH" xml:space="preserve">
    <value>Password and confirm password not match</value>
  </data>
  <data name="PRODUCT" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="RATE" xml:space="preserve">
    <value>Rate</value>
  </data>
  <data name="TEST" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="TOKEN" xml:space="preserve">
    <value>Token</value>
  </data>
  <data name="DUPLICATE_EMAIL" xml:space="preserve">
    <value>Email already exist</value>
  </data>
  <data name="DUPLICATE_USERNAME" xml:space="preserve">
    <value>User name already exist</value>
  </data>
  <data name="INVALID_EMAIL" xml:space="preserve">
    <value>Email is invalid</value>
  </data>
  <data name="DUPLICATE_ROLE_NAME" xml:space="preserve">
    <value>Role name already exist</value>
  </data>
  <data name="INVALID_ROLE_NAME" xml:space="preserve">
    <value>Role name is invalid</value>
  </data>
  <data name="INVALID_TOKEN" xml:space="preserve">
    <value>Invalid token</value>
  </data>
  <data name="INVALID_USERNAME" xml:space="preserve">
    <value>User name is invalid</value>
  </data>
  <data name="LOGIN_ALREADY_ASSOCIATED" xml:space="preserve">
    <value>An external login is already associated with this account</value>
  </data>
  <data name="PASSWORD_MISMATCH" xml:space="preserve">
    <value>The provided password does not match your saved password</value>
  </data>
  <data name="PASSWORD_REQUIRES_DIGIT" xml:space="preserve">
    <value>The password must contain digits (0 - 9)</value>
  </data>
  <data name="PASSWORD_REQUIRES_LOWER" xml:space="preserve">
    <value>The password must contain lower case letters (a - z)</value>
  </data>
  <data name="PASSWORD_REQUIRES_NON_ALPHANUMERIC" xml:space="preserve">
    <value>The password must contain non-alphanumeric characters (! + ? ...)</value>
  </data>
  <data name="PASSWORD_REQUIRES_UNIQUE_CHARS" xml:space="preserve">
    <value>The password must contain unique characters</value>
  </data>
  <data name="PASSWORD_REQUIRES_UPPER" xml:space="preserve">
    <value>The password must contain upper case letters (A - Z)</value>
  </data>
  <data name="PASSWORD_TOO_SHORT" xml:space="preserve">
    <value>Password is too short</value>
  </data>
  <data name="USER_ALREADY_HAS_PASSWORD" xml:space="preserve">
    <value>User already has a password</value>
  </data>
  <data name="USER_ALREADY_IN_ROLE" xml:space="preserve">
    <value>User is already in role</value>
  </data>
  <data name="USER_NOT_IN_ROLE" xml:space="preserve">
    <value>User is not in role</value>
  </data>
  <data name="USER_LOCKED_NOT_ENABLED" xml:space="preserve">
    <value>User lockout is not enabled</value>
  </data>
  <data name="RECOVERY_CODE_REDEMPTION_FAILED" xml:space="preserve">
    <value>Recovery code was not redeemed</value>
  </data>
  <data name="CONCURRENCY_FAILURE" xml:space="preserve">
    <value>Concurrency failure</value>
  </data>
  <data name="DEFAULT_IDENTITY_ERROR" xml:space="preserve">
    <value>Identity system error</value>
  </data>
  <data name="RESET_PASSWORD" xml:space="preserve">
    <value>Reset password</value>
  </data>
  <data name="INVALID_CREDENTIALS" xml:space="preserve">
    <value>Invalid username or password</value>
  </data>
  <data name="EMAIL_NOT_CONFIRMED" xml:space="preserve">
    <value>Email not confirmed</value>
  </data>
  <data name="USERNAME" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="USER_NOT_FOUND" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="FIRST_NAME_REQUIRED" xml:space="preserve">
    <value>First name required</value>
  </data>
  <data name="USER_NAME_REQUIRED" xml:space="preserve">
    <value>Username is required</value>
  </data>
  <data name="EMAIL_REQUIRED" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="DEVICE_MODEL" xml:space="preserve">
    <value>Device model</value>
  </data>
  <data name="DEVICE_TOKEN" xml:space="preserve">
    <value>Device token</value>
  </data>
  <data name="NOT_VALID_FILE_SIZE" xml:space="preserve">
    <value>File size is not valid</value>
  </data>
  <data name="NOT_VALID_FILE_TYPE" xml:space="preserve">
    <value>File type is not valid</value>
  </data>
  <data name="FILE" xml:space="preserve">
    <value>File</value>
  </data>
</root>